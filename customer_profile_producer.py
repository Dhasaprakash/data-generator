import json
from kafka import KafkaProducer
from typing import Dict, Any

class CustomerProfileProducer:
    def __init__(self, bootstrap_servers: str = 'localhost:9092'):
        self.producer = KafkaProducer(
            bootstrap_servers=bootstrap_servers,
            value_serializer=lambda v: json.dumps(v, default=str).encode('utf-8'),
            key_serializer=str.encode
        )
        self.topic = 'customer-profiles'

    def publish_event(self, event: Dict[str, Any]) -> None:
        """
        Publish an event message to Kafka.
        Uses the event structure exactly as generated by the fake data generator.
        """
        try:
            # Extract profile ID from the event data
            profile_id = event['data'].get('PROFILE_ID', str(event.get('eventId', '')))
            
            future = self.producer.send(
                self.topic,
                key=profile_id,
                value=event
            )
            # Wait for the message to be delivered
            record_metadata = future.get(timeout=10)
            print(f"Successfully published event to topic {record_metadata.topic}")
        except Exception as e:
            print(f"Error publishing event: {str(e)}")

    def close(self) -> None:
        self.producer.close() 